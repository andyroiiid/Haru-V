//
// Created by andyroiiid on 1/8/2023.
//
#include "gfx/BitmapTextRenderer.h"

#include "Globals.h"
#include "gfx/Renderer.h"

BitmapTextRenderer::BitmapTextRenderer(const std::string &fontTexture, const glm::vec2 &charSize)
    : m_charSize(charSize) {
    m_fontTexture = g_Renderer->LoadSingleTextureMaterial(fontTexture);
}

static const std::tuple<const glm::vec2, const glm::vec2> CHAR_UVS[256] = {
    {{0.0f, 0.9375f},    {0.0625f, 1.0f}   },
    {{0.0625f, 0.9375f}, {0.125f, 1.0f}    },
    {{0.125f, 0.9375f},  {0.1875f, 1.0f}   },
    {{0.1875f, 0.9375f}, {0.25f, 1.0f}     },
    {{0.25f, 0.9375f},   {0.3125f, 1.0f}   },
    {{0.3125f, 0.9375f}, {0.375f, 1.0f}    },
    {{0.375f, 0.9375f},  {0.4375f, 1.0f}   },
    {{0.4375f, 0.9375f}, {0.5f, 1.0f}      },
    {{0.5f, 0.9375f},    {0.5625f, 1.0f}   },
    {{0.5625f, 0.9375f}, {0.625f, 1.0f}    },
    {{0.625f, 0.9375f},  {0.6875f, 1.0f}   },
    {{0.6875f, 0.9375f}, {0.75f, 1.0f}     },
    {{0.75f, 0.9375f},   {0.8125f, 1.0f}   },
    {{0.8125f, 0.9375f}, {0.875f, 1.0f}    },
    {{0.875f, 0.9375f},  {0.9375f, 1.0f}   },
    {{0.9375f, 0.9375f}, {1.0f, 1.0f}      },
    {{0.0f, 0.875f},     {0.0625f, 0.9375f}},
    {{0.0625f, 0.875f},  {0.125f, 0.9375f} },
    {{0.125f, 0.875f},   {0.1875f, 0.9375f}},
    {{0.1875f, 0.875f},  {0.25f, 0.9375f}  },
    {{0.25f, 0.875f},    {0.3125f, 0.9375f}},
    {{0.3125f, 0.875f},  {0.375f, 0.9375f} },
    {{0.375f, 0.875f},   {0.4375f, 0.9375f}},
    {{0.4375f, 0.875f},  {0.5f, 0.9375f}   },
    {{0.5f, 0.875f},     {0.5625f, 0.9375f}},
    {{0.5625f, 0.875f},  {0.625f, 0.9375f} },
    {{0.625f, 0.875f},   {0.6875f, 0.9375f}},
    {{0.6875f, 0.875f},  {0.75f, 0.9375f}  },
    {{0.75f, 0.875f},    {0.8125f, 0.9375f}},
    {{0.8125f, 0.875f},  {0.875f, 0.9375f} },
    {{0.875f, 0.875f},   {0.9375f, 0.9375f}},
    {{0.9375f, 0.875f},  {1.0f, 0.9375f}   },
    {{0.0f, 0.8125f},    {0.0625f, 0.875f} },
    {{0.0625f, 0.8125f}, {0.125f, 0.875f}  },
    {{0.125f, 0.8125f},  {0.1875f, 0.875f} },
    {{0.1875f, 0.8125f}, {0.25f, 0.875f}   },
    {{0.25f, 0.8125f},   {0.3125f, 0.875f} },
    {{0.3125f, 0.8125f}, {0.375f, 0.875f}  },
    {{0.375f, 0.8125f},  {0.4375f, 0.875f} },
    {{0.4375f, 0.8125f}, {0.5f, 0.875f}    },
    {{0.5f, 0.8125f},    {0.5625f, 0.875f} },
    {{0.5625f, 0.8125f}, {0.625f, 0.875f}  },
    {{0.625f, 0.8125f},  {0.6875f, 0.875f} },
    {{0.6875f, 0.8125f}, {0.75f, 0.875f}   },
    {{0.75f, 0.8125f},   {0.8125f, 0.875f} },
    {{0.8125f, 0.8125f}, {0.875f, 0.875f}  },
    {{0.875f, 0.8125f},  {0.9375f, 0.875f} },
    {{0.9375f, 0.8125f}, {1.0f, 0.875f}    },
    {{0.0f, 0.75f},      {0.0625f, 0.8125f}},
    {{0.0625f, 0.75f},   {0.125f, 0.8125f} },
    {{0.125f, 0.75f},    {0.1875f, 0.8125f}},
    {{0.1875f, 0.75f},   {0.25f, 0.8125f}  },
    {{0.25f, 0.75f},     {0.3125f, 0.8125f}},
    {{0.3125f, 0.75f},   {0.375f, 0.8125f} },
    {{0.375f, 0.75f},    {0.4375f, 0.8125f}},
    {{0.4375f, 0.75f},   {0.5f, 0.8125f}   },
    {{0.5f, 0.75f},      {0.5625f, 0.8125f}},
    {{0.5625f, 0.75f},   {0.625f, 0.8125f} },
    {{0.625f, 0.75f},    {0.6875f, 0.8125f}},
    {{0.6875f, 0.75f},   {0.75f, 0.8125f}  },
    {{0.75f, 0.75f},     {0.8125f, 0.8125f}},
    {{0.8125f, 0.75f},   {0.875f, 0.8125f} },
    {{0.875f, 0.75f},    {0.9375f, 0.8125f}},
    {{0.9375f, 0.75f},   {1.0f, 0.8125f}   },
    {{0.0f, 0.6875f},    {0.0625f, 0.75f}  },
    {{0.0625f, 0.6875f}, {0.125f, 0.75f}   },
    {{0.125f, 0.6875f},  {0.1875f, 0.75f}  },
    {{0.1875f, 0.6875f}, {0.25f, 0.75f}    },
    {{0.25f, 0.6875f},   {0.3125f, 0.75f}  },
    {{0.3125f, 0.6875f}, {0.375f, 0.75f}   },
    {{0.375f, 0.6875f},  {0.4375f, 0.75f}  },
    {{0.4375f, 0.6875f}, {0.5f, 0.75f}     },
    {{0.5f, 0.6875f},    {0.5625f, 0.75f}  },
    {{0.5625f, 0.6875f}, {0.625f, 0.75f}   },
    {{0.625f, 0.6875f},  {0.6875f, 0.75f}  },
    {{0.6875f, 0.6875f}, {0.75f, 0.75f}    },
    {{0.75f, 0.6875f},   {0.8125f, 0.75f}  },
    {{0.8125f, 0.6875f}, {0.875f, 0.75f}   },
    {{0.875f, 0.6875f},  {0.9375f, 0.75f}  },
    {{0.9375f, 0.6875f}, {1.0f, 0.75f}     },
    {{0.0f, 0.625f},     {0.0625f, 0.6875f}},
    {{0.0625f, 0.625f},  {0.125f, 0.6875f} },
    {{0.125f, 0.625f},   {0.1875f, 0.6875f}},
    {{0.1875f, 0.625f},  {0.25f, 0.6875f}  },
    {{0.25f, 0.625f},    {0.3125f, 0.6875f}},
    {{0.3125f, 0.625f},  {0.375f, 0.6875f} },
    {{0.375f, 0.625f},   {0.4375f, 0.6875f}},
    {{0.4375f, 0.625f},  {0.5f, 0.6875f}   },
    {{0.5f, 0.625f},     {0.5625f, 0.6875f}},
    {{0.5625f, 0.625f},  {0.625f, 0.6875f} },
    {{0.625f, 0.625f},   {0.6875f, 0.6875f}},
    {{0.6875f, 0.625f},  {0.75f, 0.6875f}  },
    {{0.75f, 0.625f},    {0.8125f, 0.6875f}},
    {{0.8125f, 0.625f},  {0.875f, 0.6875f} },
    {{0.875f, 0.625f},   {0.9375f, 0.6875f}},
    {{0.9375f, 0.625f},  {1.0f, 0.6875f}   },
    {{0.0f, 0.5625f},    {0.0625f, 0.625f} },
    {{0.0625f, 0.5625f}, {0.125f, 0.625f}  },
    {{0.125f, 0.5625f},  {0.1875f, 0.625f} },
    {{0.1875f, 0.5625f}, {0.25f, 0.625f}   },
    {{0.25f, 0.5625f},   {0.3125f, 0.625f} },
    {{0.3125f, 0.5625f}, {0.375f, 0.625f}  },
    {{0.375f, 0.5625f},  {0.4375f, 0.625f} },
    {{0.4375f, 0.5625f}, {0.5f, 0.625f}    },
    {{0.5f, 0.5625f},    {0.5625f, 0.625f} },
    {{0.5625f, 0.5625f}, {0.625f, 0.625f}  },
    {{0.625f, 0.5625f},  {0.6875f, 0.625f} },
    {{0.6875f, 0.5625f}, {0.75f, 0.625f}   },
    {{0.75f, 0.5625f},   {0.8125f, 0.625f} },
    {{0.8125f, 0.5625f}, {0.875f, 0.625f}  },
    {{0.875f, 0.5625f},  {0.9375f, 0.625f} },
    {{0.9375f, 0.5625f}, {1.0f, 0.625f}    },
    {{0.0f, 0.5f},       {0.0625f, 0.5625f}},
    {{0.0625f, 0.5f},    {0.125f, 0.5625f} },
    {{0.125f, 0.5f},     {0.1875f, 0.5625f}},
    {{0.1875f, 0.5f},    {0.25f, 0.5625f}  },
    {{0.25f, 0.5f},      {0.3125f, 0.5625f}},
    {{0.3125f, 0.5f},    {0.375f, 0.5625f} },
    {{0.375f, 0.5f},     {0.4375f, 0.5625f}},
    {{0.4375f, 0.5f},    {0.5f, 0.5625f}   },
    {{0.5f, 0.5f},       {0.5625f, 0.5625f}},
    {{0.5625f, 0.5f},    {0.625f, 0.5625f} },
    {{0.625f, 0.5f},     {0.6875f, 0.5625f}},
    {{0.6875f, 0.5f},    {0.75f, 0.5625f}  },
    {{0.75f, 0.5f},      {0.8125f, 0.5625f}},
    {{0.8125f, 0.5f},    {0.875f, 0.5625f} },
    {{0.875f, 0.5f},     {0.9375f, 0.5625f}},
    {{0.9375f, 0.5f},    {1.0f, 0.5625f}   },
    {{0.0f, 0.4375f},    {0.0625f, 0.5f}   },
    {{0.0625f, 0.4375f}, {0.125f, 0.5f}    },
    {{0.125f, 0.4375f},  {0.1875f, 0.5f}   },
    {{0.1875f, 0.4375f}, {0.25f, 0.5f}     },
    {{0.25f, 0.4375f},   {0.3125f, 0.5f}   },
    {{0.3125f, 0.4375f}, {0.375f, 0.5f}    },
    {{0.375f, 0.4375f},  {0.4375f, 0.5f}   },
    {{0.4375f, 0.4375f}, {0.5f, 0.5f}      },
    {{0.5f, 0.4375f},    {0.5625f, 0.5f}   },
    {{0.5625f, 0.4375f}, {0.625f, 0.5f}    },
    {{0.625f, 0.4375f},  {0.6875f, 0.5f}   },
    {{0.6875f, 0.4375f}, {0.75f, 0.5f}     },
    {{0.75f, 0.4375f},   {0.8125f, 0.5f}   },
    {{0.8125f, 0.4375f}, {0.875f, 0.5f}    },
    {{0.875f, 0.4375f},  {0.9375f, 0.5f}   },
    {{0.9375f, 0.4375f}, {1.0f, 0.5f}      },
    {{0.0f, 0.375f},     {0.0625f, 0.4375f}},
    {{0.0625f, 0.375f},  {0.125f, 0.4375f} },
    {{0.125f, 0.375f},   {0.1875f, 0.4375f}},
    {{0.1875f, 0.375f},  {0.25f, 0.4375f}  },
    {{0.25f, 0.375f},    {0.3125f, 0.4375f}},
    {{0.3125f, 0.375f},  {0.375f, 0.4375f} },
    {{0.375f, 0.375f},   {0.4375f, 0.4375f}},
    {{0.4375f, 0.375f},  {0.5f, 0.4375f}   },
    {{0.5f, 0.375f},     {0.5625f, 0.4375f}},
    {{0.5625f, 0.375f},  {0.625f, 0.4375f} },
    {{0.625f, 0.375f},   {0.6875f, 0.4375f}},
    {{0.6875f, 0.375f},  {0.75f, 0.4375f}  },
    {{0.75f, 0.375f},    {0.8125f, 0.4375f}},
    {{0.8125f, 0.375f},  {0.875f, 0.4375f} },
    {{0.875f, 0.375f},   {0.9375f, 0.4375f}},
    {{0.9375f, 0.375f},  {1.0f, 0.4375f}   },
    {{0.0f, 0.3125f},    {0.0625f, 0.375f} },
    {{0.0625f, 0.3125f}, {0.125f, 0.375f}  },
    {{0.125f, 0.3125f},  {0.1875f, 0.375f} },
    {{0.1875f, 0.3125f}, {0.25f, 0.375f}   },
    {{0.25f, 0.3125f},   {0.3125f, 0.375f} },
    {{0.3125f, 0.3125f}, {0.375f, 0.375f}  },
    {{0.375f, 0.3125f},  {0.4375f, 0.375f} },
    {{0.4375f, 0.3125f}, {0.5f, 0.375f}    },
    {{0.5f, 0.3125f},    {0.5625f, 0.375f} },
    {{0.5625f, 0.3125f}, {0.625f, 0.375f}  },
    {{0.625f, 0.3125f},  {0.6875f, 0.375f} },
    {{0.6875f, 0.3125f}, {0.75f, 0.375f}   },
    {{0.75f, 0.3125f},   {0.8125f, 0.375f} },
    {{0.8125f, 0.3125f}, {0.875f, 0.375f}  },
    {{0.875f, 0.3125f},  {0.9375f, 0.375f} },
    {{0.9375f, 0.3125f}, {1.0f, 0.375f}    },
    {{0.0f, 0.25f},      {0.0625f, 0.3125f}},
    {{0.0625f, 0.25f},   {0.125f, 0.3125f} },
    {{0.125f, 0.25f},    {0.1875f, 0.3125f}},
    {{0.1875f, 0.25f},   {0.25f, 0.3125f}  },
    {{0.25f, 0.25f},     {0.3125f, 0.3125f}},
    {{0.3125f, 0.25f},   {0.375f, 0.3125f} },
    {{0.375f, 0.25f},    {0.4375f, 0.3125f}},
    {{0.4375f, 0.25f},   {0.5f, 0.3125f}   },
    {{0.5f, 0.25f},      {0.5625f, 0.3125f}},
    {{0.5625f, 0.25f},   {0.625f, 0.3125f} },
    {{0.625f, 0.25f},    {0.6875f, 0.3125f}},
    {{0.6875f, 0.25f},   {0.75f, 0.3125f}  },
    {{0.75f, 0.25f},     {0.8125f, 0.3125f}},
    {{0.8125f, 0.25f},   {0.875f, 0.3125f} },
    {{0.875f, 0.25f},    {0.9375f, 0.3125f}},
    {{0.9375f, 0.25f},   {1.0f, 0.3125f}   },
    {{0.0f, 0.1875f},    {0.0625f, 0.25f}  },
    {{0.0625f, 0.1875f}, {0.125f, 0.25f}   },
    {{0.125f, 0.1875f},  {0.1875f, 0.25f}  },
    {{0.1875f, 0.1875f}, {0.25f, 0.25f}    },
    {{0.25f, 0.1875f},   {0.3125f, 0.25f}  },
    {{0.3125f, 0.1875f}, {0.375f, 0.25f}   },
    {{0.375f, 0.1875f},  {0.4375f, 0.25f}  },
    {{0.4375f, 0.1875f}, {0.5f, 0.25f}     },
    {{0.5f, 0.1875f},    {0.5625f, 0.25f}  },
    {{0.5625f, 0.1875f}, {0.625f, 0.25f}   },
    {{0.625f, 0.1875f},  {0.6875f, 0.25f}  },
    {{0.6875f, 0.1875f}, {0.75f, 0.25f}    },
    {{0.75f, 0.1875f},   {0.8125f, 0.25f}  },
    {{0.8125f, 0.1875f}, {0.875f, 0.25f}   },
    {{0.875f, 0.1875f},  {0.9375f, 0.25f}  },
    {{0.9375f, 0.1875f}, {1.0f, 0.25f}     },
    {{0.0f, 0.125f},     {0.0625f, 0.1875f}},
    {{0.0625f, 0.125f},  {0.125f, 0.1875f} },
    {{0.125f, 0.125f},   {0.1875f, 0.1875f}},
    {{0.1875f, 0.125f},  {0.25f, 0.1875f}  },
    {{0.25f, 0.125f},    {0.3125f, 0.1875f}},
    {{0.3125f, 0.125f},  {0.375f, 0.1875f} },
    {{0.375f, 0.125f},   {0.4375f, 0.1875f}},
    {{0.4375f, 0.125f},  {0.5f, 0.1875f}   },
    {{0.5f, 0.125f},     {0.5625f, 0.1875f}},
    {{0.5625f, 0.125f},  {0.625f, 0.1875f} },
    {{0.625f, 0.125f},   {0.6875f, 0.1875f}},
    {{0.6875f, 0.125f},  {0.75f, 0.1875f}  },
    {{0.75f, 0.125f},    {0.8125f, 0.1875f}},
    {{0.8125f, 0.125f},  {0.875f, 0.1875f} },
    {{0.875f, 0.125f},   {0.9375f, 0.1875f}},
    {{0.9375f, 0.125f},  {1.0f, 0.1875f}   },
    {{0.0f, 0.0625f},    {0.0625f, 0.125f} },
    {{0.0625f, 0.0625f}, {0.125f, 0.125f}  },
    {{0.125f, 0.0625f},  {0.1875f, 0.125f} },
    {{0.1875f, 0.0625f}, {0.25f, 0.125f}   },
    {{0.25f, 0.0625f},   {0.3125f, 0.125f} },
    {{0.3125f, 0.0625f}, {0.375f, 0.125f}  },
    {{0.375f, 0.0625f},  {0.4375f, 0.125f} },
    {{0.4375f, 0.0625f}, {0.5f, 0.125f}    },
    {{0.5f, 0.0625f},    {0.5625f, 0.125f} },
    {{0.5625f, 0.0625f}, {0.625f, 0.125f}  },
    {{0.625f, 0.0625f},  {0.6875f, 0.125f} },
    {{0.6875f, 0.0625f}, {0.75f, 0.125f}   },
    {{0.75f, 0.0625f},   {0.8125f, 0.125f} },
    {{0.8125f, 0.0625f}, {0.875f, 0.125f}  },
    {{0.875f, 0.0625f},  {0.9375f, 0.125f} },
    {{0.9375f, 0.0625f}, {1.0f, 0.125f}    },
    {{0.0f, 0.0f},       {0.0625f, 0.0625f}},
    {{0.0625f, 0.0f},    {0.125f, 0.0625f} },
    {{0.125f, 0.0f},     {0.1875f, 0.0625f}},
    {{0.1875f, 0.0f},    {0.25f, 0.0625f}  },
    {{0.25f, 0.0f},      {0.3125f, 0.0625f}},
    {{0.3125f, 0.0f},    {0.375f, 0.0625f} },
    {{0.375f, 0.0f},     {0.4375f, 0.0625f}},
    {{0.4375f, 0.0f},    {0.5f, 0.0625f}   },
    {{0.5f, 0.0f},       {0.5625f, 0.0625f}},
    {{0.5625f, 0.0f},    {0.625f, 0.0625f} },
    {{0.625f, 0.0f},     {0.6875f, 0.0625f}},
    {{0.6875f, 0.0f},    {0.75f, 0.0625f}  },
    {{0.75f, 0.0f},      {0.8125f, 0.0625f}},
    {{0.8125f, 0.0f},    {0.875f, 0.0625f} },
    {{0.875f, 0.0f},     {0.9375f, 0.0625f}},
    {{0.9375f, 0.0f},    {1.0f, 0.0625f}   },
};

void BitmapTextRenderer::DrawText(const std::string &text, const glm::vec2 &position, const glm::vec4 &color) {
    glm::vec2 p = position;
    for (char c: text) {
        const auto &[uvMin, uvMax] = CHAR_UVS[c];
        g_Renderer->DrawScreenRect(p, p + m_charSize, uvMin, uvMax, color, m_fontTexture);
        p.x += m_charSize.x;
    }
}
